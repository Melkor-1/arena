name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck

      
            - ชื่อ: ตั้งค่าสภาพแวดล้อม Go
  การใช้งาน: actions/setup-go@v5.0.1
  กับ:
    # เวอร์ชัน Go ที่จะดาวน์โหลด (ถ้าจำเป็น) และใช้งาน รองรับข้อมูลจำเพาะและช่วงของ semver อย่าลืมใส่ตัวเลือกนี้ไว้ในเครื่องหมายคำพูดเดี่ยว
    go-เวอร์ชัน: # ตัวเลือก
    # เส้นทางไปยังไฟล์ go.mod หรือ go.work
    go-version-file: # ตัวเลือก
    # ตั้งค่าตัวเลือกนี้เป็นจริงหากคุณต้องการให้การดำเนินการตรวจสอบเวอร์ชันล่าสุดที่มีอยู่ซึ่งตรงกับข้อมูลจำเพาะของเวอร์ชันอยู่เสมอ
    ตรวจสอบล่าสุด: # ตัวเลือก
    # ใช้เพื่อดึงการแจกแจง Go จากเวอร์ชัน go เนื่องจากมีค่าเริ่มต้น จึงมักไม่ได้ระบุโดยผู้ใช้ เมื่อเรียกใช้การกระทำนี้บน github.com ค่าเริ่มต้นก็เพียงพอแล้ว เมื่อทำงานบน GHES คุณสามารถส่งโทเค็นการเข้าถึงส่วนบุคคลสำหรับ github.com ได้ หากคุณประสบปัญหาการจำกัดอัตรา
    โทเค็น: # ตัวเลือก ค่าเริ่มต้นคือ ${{ github.server_url == 'https://github.com' && github.token || -
    # ใช้เพื่อระบุว่าจำเป็นต้องมีการแคชหรือไม่ ตั้งค่าเป็นจริง หากคุณต้องการเปิดใช้งานการแคช
    แคช: # ตัวเลือก ค่าเริ่มต้นเป็นจริง
    # ใช้เพื่อระบุเส้นทางไปยังไฟล์อ้างอิง - go.sum
    เส้นทางการพึ่งพาแคช: # ตัวเลือก
    # สถาปัตยกรรมเป้าหมายสำหรับ Go to use ตัวอย่าง: x86, x64 จะใช้สถาปัตยกรรมระบบเป็นค่าเริ่มต้น
    สถาปัตยกรรม: # ตัวเลือก
          
